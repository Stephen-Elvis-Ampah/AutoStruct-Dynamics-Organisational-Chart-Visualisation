"0","XY <- c(24015319, 480442671, 57765129, 6772172, 9401538, 57940350)"
"0","MN <- c(17945543, 300517552, 31052000, 2798460, 8626025, 1894563)"
"0",""
"0","dt <- data.table("
"0","  from = c(""CAR"", ""CAR"", ""German"", ""German"", ""German"", ""America"", ""America"", ""America""),"
"0","  to = c(""German"", ""America"", ""AUDI"", ""BMW"", ""Opel"", ""RAM"", ""GMC"", ""Jeep"")"
"0",")"
"0",""
"0","# Customize tooltip to show XY and MN values for links and nodes"
"0","Tooltip <- JS("
"0","  ""function() {"
"0","      let total_xy = 0;"
"0","      let total_mn = 0;"
"0","      if (this.point.id === 'German') {"
"0","        ['AUDI', 'BMW', 'Opel'].forEach(function(id) {"
"0","          let node = this.series.nodes.find(node => node.id === id);"
"0","          if (node) {"
"0","            total_xy += node.xy;"
"0","            total_mn += node.mn;"
"0","          }"
"0","        }, this);"
"0","        return this.point.name + '<br>Total: ' + total_xy.toLocaleString('de-DE') + '<br>Change: ' + total_mn.toLocaleString('de-DE');"
"0","      } else if (this.point.id === 'America') {"
"0","        ['RAM', 'GMC', 'Jeep'].forEach(function(id) {"
"0","          let node = this.series.nodes.find(node => node.id === id);"
"0","          if (node) {"
"0","            total_xy += node.xy;"
"0","            total_mn += node.mn;"
"0","          }"
"0","        }, this);"
"0","        return this.point.name + '<br>Total: ' + total_xy.toLocaleString('de-DE') + '<br>Change: ' + total_mn.toLocaleString('de-DE');"
"0","      } else if (this.point.id === 'AUDI' || this.point.id === 'BMW' || this.point.id === 'Opel' || this.point.id === 'RAM' || this.point.id === 'GMC' || this.point.id === 'Jeep') {"
"0","        return this.point.name + '<br>Total: ' + this.point.xy.toLocaleString('de-DE') + '<br>Change: ' + this.point.mn.toLocaleString('de-DE');"
"0","      } else if (this.point.id === 'CAR') {"
"0","        ['AUDI', 'BMW', 'Opel', 'RAM', 'GMC', 'Jeep'].forEach(function(id) {"
"0","          let node = this.series.nodes.find(node => node.id === id);"
"0","          if (node) {"
"0","            total_xy += node.xy;"
"0","            total_mn += node.mn;"
"0","          }"
"0","        }, this);"
"0","        return this.point.name + '<br>Total: ' + total_xy.toLocaleString('de-DE') + '<br>Change: ' + total_mn.toLocaleString('de-DE');"
"0","      } else {"
"0","        return this.point.name;"
"0","      }"
"0","    }"""
"0",")"
"0",""
"0","Datalabel <- JS("
"0","  ""function() {"
"0","      let total_xy = 0;"
"0","      let total_mn = 0;"
"0","      if (this.point.id === 'German') {"
"0","        ['AUDI', 'BMW', 'Opel'].forEach(function(id) {"
"0","          let node = this.series.nodes.find(node => node.id === id);"
"0","          if (node) {"
"0","            total_xy += node.xy;"
"0","            total_mn += node.mn;"
"0","          }"
"0","        }, this);"
"0","        return this.point.name + '<br>Ist: ' + Highcharts.numberFormat(total_xy/1000000, 2, ',', '.') + ' Mio.<br>Δ: ' + Highcharts.numberFormat(total_mn/1000000, 2, ',', '.') + ' Mio.';"
"0","      } else if (this.point.id === 'America') {"
"0","        ['RAM', 'GMC', 'Jeep'].forEach(function(id) {"
"0","          let node = this.series.nodes.find(node => node.id === id);"
"0","          if (node) {"
"0","            total_xy += node.xy;"
"0","            total_mn += node.mn;"
"0","          }"
"0","        }, this);"
"0","        return this.point.name + '<br>Ist: ' + Highcharts.numberFormat(total_xy/1000000, 2, ',', '.') + ' Mio.<br>Δ: ' + Highcharts.numberFormat(total_mn/1000000, 2, ',', '.') + ' Mio.';"
"0","      } else if (this.point.id === 'AUDI' || this.point.id === 'BMW' || this.point.id === 'Opel' || this.point.id === 'RAM' || this.point.id === 'GMC' || this.point.id === 'Jeep') {"
"0","        return this.point.name + '<br>Ist: ' + Highcharts.numberFormat(this.point.xy/1000000, 2, ',', '.') + ' Mio.<br>Δ: ' + Highcharts.numberFormat(this.point.mn/1000000, 2, ',', '.') + ' Mio.';"
"0","      } else if (this.point.id === 'CAR') {"
"0","        ['AUDI', 'BMW', 'Opel', 'RAM', 'GMC', 'Jeep'].forEach(function(id) {"
"0","          let node = this.series.nodes.find(node => node.id === id);"
"0","          if (node) {"
"0","            total_xy += node.xy;"
"0","            total_mn += node.mn;"
"0","          }"
"0","        }, this);"
"0","        return this.point.name + '<br>Ist: ' + Highcharts.numberFormat(total_xy/1000000, 2, ',', '.') + ' Mio.<br>Δ: ' + Highcharts.numberFormat(total_mn/1000000, 2, ',', '.') + ' Mio.';"
"0","      } else {"
"0","        return this.point.name;"
"0","      }"
"0","    }"""
"0",")"
"0",""
"0",""
"0","hc <- highchart() %>%"
"0","  "
"0","  hc_chart(inverted = TRUE,"
"0","           backgroundColor = ""#343A40"""
"0","  ) %>%"
"0","  "
"0","  ## The plotOptions is a wrapper object for the configuration of objects for each series type"
"0","  hc_plotOptions(organization = list("
"0","    linkColor = ""#f8f9fa"","
"0","    nodeWidth = 70,"
"0","    height = 70"
"0","  )) %>%"
"0","  "
"0","  hc_add_series(data = dt,"
"0","                type = ""organization"","
"0","                colorByPoint = FALSE,"
"0","                color = list("
"0","                  linearGradient = list(x1 = 0, y1 = 0, x2 = 1, y2 = 0),"
"0","                  stops = list("
"0","                    c(0, ""#6F201A""),"
"0","                    c(1, ""#FFC3B3""))),"
"0","                dataLabels = list("
"0","                  enabled = TRUE,"
"0","                  useHTML = TRUE,"
"0","                  style = list("
"0","                    color = ""#f8f9fa"","
"0","                    fontSize = ""12px"","
"0","                    fontWeight = ""bold"","
"0","                    textOutline = FALSE"
"0","                  ),"
"0","                  # crop = FALSE,"
"0","                  # allowOverlap = TRUE,"
"0","                  nodeFormatter = Datalabel"
"0","                ),"
"0","                "
"0","                nodes = list("
"0","                  list(id = ""AUDI"", xy = XY[1], mn = MN[1]), "
"0","                  list(id = ""RAM"", xy = XY[2], mn = MN[2]),"
"0","                  list(id = ""BMW"", xy = XY[3], mn = MN[3]),"
"0","                  list(id = ""GMC"", xy = XY[4], mn = MN[4]),"
"0","                  list(id = ""Opel"", xy = XY[5], mn = MN[5]),"
"0","                  list(id = ""Jeep"", xy = XY[6], mn = MN[6]),"
"0","                  list(id = ""CAR""),"
"0","                  list(id = ""German""),"
"0","                  list(id = ""America"")"
"0","                )"
"0","                "
"0","  ) %>%"
"0","  "
"0","  # Tooltip enables the hovering effect to take place"
"0","  hc_tooltip("
"0","    enabled = TRUE,"
"0","    useHTML = TRUE,"
"0","    className = NULL,"
"0","    formatter = Tooltip"
"0","  )"
"0",""
"0","hc"
